version: '3.8'

services:
  # Backend service - Flask API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://sadp_user:sadp_password@db:5432/sadp
    depends_on:
      - db
    networks:
      - sadp-network
    restart: unless-stopped

  # Frontend service - React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - sadp-network
    restart: unless-stopped

  # Database service - PostgreSQL
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=sadp_user
      - POSTGRES_PASSWORD=sadp_password
      - POSTGRES_DB=sadp
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - sadp-network
    restart: unless-stopped

  # Sandbox service for isolated vulnerable component execution
  sandbox:
    build:
      context: ./sandbox
      dockerfile: Dockerfile
    volumes:
      - ./sandbox:/app
    networks:
      - sandbox-network
    security_opt:
      - seccomp=sandbox/seccomp-profile.json
    cap_drop:
      - ALL
    read_only: true
    restart: unless-stopped

networks:
  sadp-network:
    driver: bridge
  sandbox-network:
    driver: bridge
    internal: true  # Isolated network for sandbox

volumes:
  postgres-data:
